name: Build

on: 
  push:
    branches:
    - main
    paths:
    - terraform/**
    - aws_lambda/**
    - tests/**
  pull_request:
    branches:
    - main
    paths:
    - terraform/**
    - aws_lambda/**
    - tests/**

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  lint_format_and_test:
    name: Lint, Format, and Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      id: checkout_repo
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Setup Python
      id: setup_python
      uses: actions/setup-python@v3
      with:
        python-version: "3.x"
    - name: Install Dependencies
      id: install_dependencies
      run: |
        python -m pip install pipenv &&
        pipenv install --dev
      shell: bash
    - name: Sort Imports with isort
      id: sort_imports
      uses: isort/isort-action@master
    - name: Format with Black
      id: format
      uses: psf/black@stable
    - name: Run Tests
      id: run_tests
      run: |
        python -m pytest -v tests
      shell: bash
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      id: checkout_repo
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Configure AWS Credentials
      id: configure_aws_credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_TERRAFORM_ROLE }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: Setup Terraform
      id: setup_terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ vars.TERRAFORM_VERSION }}
        terraform_wrapper: false
    - name: Terraform Format
      id: terraform_format
      run: terraform fmt --recursive --check
      working-directory: ./terraform
      shell: bash
    - name: Terraform Init
      id: terraform_init
      run: terraform init
      working-directory: ./terraform
      shell: bash
    - name: Terraform Plan
      id: terraform_plan
      run: terraform plan -input=false -no-color -out /tmp/tf.plan
      working-directory: ./terraform
      shell: bash
    - name: Terraform Show
      id: terraform_show
      run: terraform show -no-color /tmp/tf.plan 2>&1 > /tmp/plan.txt
      working-directory: ./terraform
      shell: bash
    - name: Comment on Pull Request
      id: comment_on_pull_request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const output = `#### Terraform Format and Style 🖌\`${{ steps.terraform_format.outcome }}\`
          #### Terraform Initialization ⚙️\`${{ steps.terraform_init.outcome }}\`
          #### Terraform Plan 📖\`${{ steps.terraform_plan.outcome }}\``
        
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Update Terraform Docs
      id: update_terraform_docs
      uses: terraform-docs/gh-actions@main
      if: github.event_name == 'pull_request'
      with:
        working-dir: ./terraform
        output-file: README.md
        output-method: inject
        git-push: "true"
    - name: Terraform Apply
      id: terraform_apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -input=false /tmp/tf.plan
      working-directory: ./terraform
      shell: bash
    